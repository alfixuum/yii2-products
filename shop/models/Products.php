<?php

namespace app\models;

use Yii;


/**
 * @property mixed image
 */
class Products extends \yii\db\ActiveRecord
{
//    public $img;
    public $image;
    public $gallery;


    public function behaviors()
    {
        return [
            'image' => [
                'class' => 'rico\yii2images\behaviors\ImageBehave',
            ]
        ];
    }

    public static function tableName()
    {
        return 'products';
    }


    public function rules()
    {
        return [
            [['price'], 'number'],
            [['description'], 'string'],
            [['user_id', 'category_id'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['title', 'price','description'], 'required'],
            [['image'], 'file', 'extensions' => 'png,jpg'],
            [['gallery'], 'file', 'extensions' => 'png,jpg', 'maxFiles' => 4],

        ];
    }

    public function upload(){
        if($this->validate()) {
            $path = 'uploads/store/' . $this->image->baseName . '.' .
                $this->image->extension;
            $this->image->saveAs($path);
            $this->attachImage($path, true);
            @unlink($path);
            return true;
        }else{
            return false;
        }
    }

    public function uploadGallery(){
        if($this->validate()) {
            foreach ($this->gallery as $file) {
                $path = 'uploads/store/' . $file->baseName . '.' .
                    $file->extension;
                $file->saveAs($path);
                $this->attachImage($path);
                @unlink($path);
            }
            return true;
        }else{
            return false;
        }
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Название',
            'price' => 'Цена',
            'description' => 'Описание',
            'image' => 'Изображение',
            'gallery' => 'Галерея',
            'user_id' => 'User ID',
            'category_id' =>  'Category_Id',
        ];
    }
//    public function saveImage($filename)
//    {
//        $this->img = $filename;
//        return $this->save(false);
//    }
//
//    public function getImage()
//    {
//        return ($this->image) ? '/uploads/store/' . $this->image : '/no-image.png/';
//    }
//
//    public function deleteImages()
//    {
//        $imageUploadModel = new ImageUpload();
//        $imageUploadModel -> deleteCurrentImages($this->image);
//    }
//
//    public function beforeDelete()
//    {
//        $this->deleteImages();
//        return parent::beforeDelete(); // TODO: Change the autogenerated stub
//    }


    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }

    public function saveCategory($category_id)
    {
        $category = Category::findOne($category_id);
        if($category !=null)
        {
            $this->link('category', $category);
            return true;
        }
    }

}
